const foundationFramework = require('@ctrip/node-vampire-foundation-framework')
const { tripLog } = require('@ctrip/node-vampire-triplog')
const { generateDirPath, checkFileExistSync } = require('../util')
const foundation = require('../common/foundation')
const { FILE_META_FILENAME } = require('../common/constants')
const pkg = require('../../package.json')
const path = require('path')

// http://conf.ctripcorp.com/pages/viewpage.action?pageId=1838426079
class IgnitionLog {
  constructor () {
    this.indexedTags = {
      init_process: [],
      local_file_exist: 0,
      appid_init_way: 2,
      shark_appid: parseInt(foundation.appID),
      config_appid: parseInt(foundation.appID),
      system_config: 1,
      data_init_way: '',
      file_url: '',
      file_response_code: '',
      ignite_code: 200,
      sdk_type: 'Node',
      sdk_version: pkg.version
    }
    this.lossy = false
  }

  setLog () {
    this.indexedTags.shark_appid = parseInt(foundation.appID)
    if (checkFileExistSync(`${generateDirPath(foundation.appID)}/${FILE_META_FILENAME}`)) {
      this.indexedTags.local_file_exist = 1
    } else if (checkFileExistSync(path.resolve(__dirname, `../../file-cache/${foundationFramework.getAppID()}/${FILE_META_FILENAME}`))) {
      this.indexedTags.local_file_exist = 2
    }
  }

  hasLossy () {
    this.lossy = true
  }

  report () {
    tripLog.custom({
      title: 'ibu-shark-client',
      addInfo: {
        ...this.indexedTags,
        init_process: this.indexedTags.init_process.join('->')
      },
      scenario: true
    })
  }
}

module.exports = new IgnitionLog()
