'use strict'
const is = require('is-type-of')
const qconfig = require('@ctrip/node-vampire-qconfig')
const constants = require('./constants')

/**
 * group标准化
 */
exports.normalizeGroup = (group) => {
  if (!is.isString(group)) {
    return constants.GROUPS.TRIP
  }
  switch (group.toLowerCase()) {
    case constants.GROUPS.CTRIP:
      return constants.GROUPS.CTRIP
    default:
      return constants.GROUPS.TRIP
  }
}

/**
 * locale标准化
 */
exports.normalizeLocale = (locale) => {
  if (!is.isString(locale)) {
    return constants.BASE_LOCALE
  }

  let ret = locale.replace('_', '-')
  if (ret.length === 2) {
    return this.getDefaultLocale(ret)
  }

  const arr = ret.split('-')
  ret = arr[0].toLowerCase() + '-' + ((arr[1] && arr[1].toUpperCase()) || '')
  if (!/^[a-z]{2}(?:-[A-Z]{2}){0,1}$/.test(ret)) {
    return constants.BASE_LOCALE
  }

  return ret
}

/**
 * lang到locale的转换
 */
exports.getDefaultLocale = (locale) => {
  if (!is.isString(locale)) {
    return constants.BASE_LOCALE
  }
  const localeMap = {
    en: 'en-US',
    us: 'en-US',
    es: 'es-ES',
    fr: 'fr-FR',
    de: 'de-DE',
    id: 'id-ID',
    ko: 'ko-KR',
    kr: 'ko-KR',
    ja: 'ja-JP',
    jp: 'ja-JP',
    ms: 'ms-MY',
    my: 'ms-MY',
    th: 'th-TH',
    ru: 'ru-RU',
    zh: 'zh-HK',
    hk: 'zh-HK',
    sg: 'en-SG',
    tw: 'zh-TW'
  }
  return localeMap[locale.substr(0, 2)] || 'en-US'
}

/**
 * 判断对象是否为空
 */
exports.isEmptyObj = (obj) => {
  return Object.values(obj).length === 0
}

/**
 * 获取qconfig
 * @param key
 * @returns {*}
 */
exports.getCommonConfig = key => {
  const _qconfig = qconfig.getConfig(constants.QCONFIG.FILENAME)
  return _qconfig && _qconfig.getSync(key)
}
