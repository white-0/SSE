const path = require('path')
const download = require('./download')

let appID = null
let pkg = null
let pkgConfigDir = null
let pkgConfigFile = null

const entry = (require.main && require.main.filename) ||
  (process.argv[1] && path.resolve(process.cwd(), process.argv[1])) ||
  null

if (entry) {
  pkgConfigDir = path.dirname(entry)
} else {
  pkgConfigDir = process.cwd()
}

while (true) {
  pkgConfigFile = path.resolve(pkgConfigDir, 'package.json')
  try {
    pkg = require(pkgConfigFile)
    const keyName = Object.keys(pkg).find(v => v.toLowerCase() === 'sharkappid')
    if (keyName) {
      appID = pkg[keyName]
      console.log(`[SHARK-SDK POSTINSTALL] getAppID ${appID} from ${pkgConfigFile} ${keyName}`)
      break
    }
  } catch {}

  const upperDir = path.dirname(pkgConfigDir)
  if (pkgConfigDir === upperDir) {
    // root dir
    break
  }

  pkgConfigDir = upperDir
}

if (!appID) {
  try {
    const foundationFramework = require('@ctrip/node-vampire-foundation-framework')
    appID = foundationFramework.getAppID()
  } catch {}
}

if (!appID) {
  console.log('[SHARK-SDK POSTINSTALL] getAppID Failed')
  process.exit(0)
}

download(appID)
  .then(() => {
    console.log(`[SHARK-SDK POSTINSTALL] download ${appID} success`)
    process.exit(0)
  }).catch(error => {
    console.log(`[SHARK-SDK POSTINSTALL] download ${appID} error`, error)
    process.exit(0)
  })
