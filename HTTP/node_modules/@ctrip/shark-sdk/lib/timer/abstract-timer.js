'use strict'
const is = require('is-type-of')
const constants = require('../common/constants')

class AbstractTimer {
  constructor (successInterval, errorInterval, startAtOnce, throwOnInitialError) {
    /**
     * interval to next tick on success
     */
    this._successInterval = successInterval || constants.INTERVALS.DEFAULT

    /**
     * interval to next tick on error
     */
    this._errorInterval = errorInterval || constants.INTERVALS.DEFAULT

    /**
     * start at once
     */
    this.startAtOnce = startAtOnce || false

    /**
     * throw error when initial tick fail
     */
    this.throwOnInitialError = throwOnInitialError || false
  }

  get successInterval () {
    return is.isFunction(this._successInterval)
      ? this._successInterval()
      : this._successInterval
  }

  get errorInterval () {
    return is.isFunction(this._errorInterval)
      ? this._errorInterval()
      : this._errorInterval
  }

  setup () {
    const setupTimeout = this.startAtOnce ? 0 : this.successInterval
    return setTimeout(() => {
      this.start(true)
    }, setupTimeout)
  }

  start (firstRun) {
    let nextInterval

    return this.run().then(() => {
      nextInterval = this.successInterval
    }).catch(e => {
      if (firstRun && this.throwOnInitialError) {
        throw e
      }
      nextInterval = this.errorInterval
    }).then(() => {
      this.nextTick(nextInterval)
    })
  }

  run () {
    return Promise.reject(new Error('abstract method'))
  }

  nextTick (nextInterval) {
    setTimeout(() => {
      this.start(false)
    }, nextInterval)
  }
}

module.exports = AbstractTimer
