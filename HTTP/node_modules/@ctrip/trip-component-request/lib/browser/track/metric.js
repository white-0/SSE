"use strict";

function _typeof(o) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, _typeof(o); }
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.trackAjaxError = trackAjaxError;
exports.trackAjaxPerformance = trackAjaxPerformance;
exports.trackAjaxTiming = trackAjaxTiming;
var _tripComponentUbt = require("@ctrip/trip-component-ubt");
var _excluded = ["duration"],
  _excluded2 = ["xIbuTripRegion"];
function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }
function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }
function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }
function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }
function _iterableToArrayLimit(r, l) { var t = null == r ? null : "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"]; if (null != t) { var e, n, i, u, a = [], f = !0, o = !1; try { if (i = (t = t.call(r)).next, 0 === l) { if (Object(t) !== t) return; f = !1; } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0); } catch (r) { o = !0, n = r; } finally { try { if (!f && null != t.return && (u = t.return(), Object(u) !== u)) return; } finally { if (o) throw n; } } return a; } }
function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }
function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
function _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
function _toPropertyKey(arg) { var key = _toPrimitive(arg, "string"); return _typeof(key) === "symbol" ? key : String(key); }
function _toPrimitive(input, hint) { if (_typeof(input) !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (_typeof(res) !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }
function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }
function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }
var AJAX_METRIC_KEY = 'ibu_ajax_perf';
var AJAX_METRIC_SAMPLE = 100;
function validTiming(timing) {
  var realTiming = {};
  Object.keys(timing).forEach(function (key) {
    if (typeof key === 'string' && typeof timing[key] === 'number') {
      var time = Math.max(timing[key], 0);
      realTiming[key] = time;
    }
  });
  return realTiming;
}
function trackAjaxPerformance(url, timing) {
  var extraInfo = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
  var _validTiming = validTiming(timing),
    duration = _validTiming.duration,
    otherTiming = _objectWithoutProperties(_validTiming, _excluded);
  var data = JSON.stringify(_objectSpread({}, otherTiming));
  var tag = {
    url: url,
    duration: duration,
    region: extraInfo.region || '',
    data: data
  };
  var metric = {
    name: AJAX_METRIC_KEY,
    value: timing.duration,
    sample: AJAX_METRIC_SAMPLE,
    tag: tag
  };
  return (0, _tripComponentUbt.trackMetric)(metric);
}
function diff(end, start) {
  return start > 0 && end > start ? end - start : 0;
}
function trackAjaxTiming(entry) {
  var extraInfo = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
  var traceIds = arguments.length > 2 ? arguments[2] : undefined;
  var timing = {
    DNSTime: diff(entry.domainLookupEnd, entry.domainLookupStart),
    TCPTime: diff(entry.connectEnd, entry.connectStart),
    SSLTime: diff(entry.connectEnd, entry.secureConnectionStart),
    requestTime: diff(entry.responseStart, entry.requestStart || entry.fetchStart || entry.startTime),
    responseTime: diff(entry.responseEnd, entry.responseStart),
    duration: entry.duration || diff(entry.responseEnd, entry.fetchStart)
  };
  return Promise.all([trackAjaxPerformance(entry.name, timing, extraInfo), traceIds ? trackAjaxMessageTraceID(traceIds, {
    url: entry.name,
    duration: timing.duration,
    'ak-region': extraInfo['ak-region'] || ''
  }) : Promise.reject()]).then(function (_ref) {
    var _ref2 = _slicedToArray(_ref, 1),
      status = _ref2[0];
    return status;
  });
}

/**
 * report clogger & cat id for debug
 * use legacy metric key: 'JS.Lizard.AjaxReady'
 * @see http://conf.ctripcorp.com/pages/viewpage.action?pageId=176086443
 */
function trackAjaxMessageTraceID(traceIds, extData) {
  if (!traceIds || Object.keys(traceIds).length === 0) {
    return;
  }
  var xIbuTripRegion = extData.xIbuTripRegion,
    rest = _objectWithoutProperties(extData, _excluded2);
  // tag 上限8个，后续有新增统一放入 collection 内部
  var collections = [];
  if (xIbuTripRegion) collections.push("x-ibu-trip-region:".concat(xIbuTripRegion));
  var collection = collections.join(';');
  var data = _objectSpread(_objectSpread(_objectSpread({}, rest), traceIds), {}, {
    collection: collection
  });
  var metric = {
    name: 'JS.Lizard.AjaxReady',
    tag: data,
    value: extData.duration || 0
  };
  return (0, _tripComponentUbt.trackMetric)(metric);
}
function trackAjaxError(e) {
  var originError = e.originError;
  var errorData = {
    message: e.message,
    stack: e.stack,
    line: originError === null || originError === void 0 ? void 0 : originError.lineNumber,
    column: originError === null || originError === void 0 ? void 0 : originError.columnNumber,
    file: originError === null || originError === void 0 ? void 0 : originError.fileName
  };
  (0, _tripComponentUbt.trackError)(errorData);
  var errorMetric = {
    name: 'ibu_ajax_fail',
    tag: {
      status: e.status || 0,
      statusText: e.statusText || '',
      message: e.message || '',
      url: e.url || ''
    },
    value: 1
  };
  (0, _tripComponentUbt.trackMetric)(errorMetric);
}