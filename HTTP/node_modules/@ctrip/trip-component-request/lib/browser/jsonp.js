"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.jsonp = jsonp;
var _utils = require("../shared/utils");
var _request = require("./request");
var loadScript = function loadScript(url, cb) {
  var script = document.createElement('script');
  script.src = url;
  script.async = true;
  script.onerror = function (e) {
    return cb(e);
  };
  document.body.appendChild(script);
};
var idx = 1;
function jsonp(url) {
  var params = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
  var _ref = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {},
    _ref$callbackKey = _ref.callbackKey,
    callbackKey = _ref$callbackKey === void 0 ? 'callback' : _ref$callbackKey,
    _ref$useAjax = _ref.useAjax,
    useAjax = _ref$useAjax === void 0 ? false : _ref$useAjax,
    _ref$timeout = _ref.timeout,
    timeout = _ref$timeout === void 0 ? 0 : _ref$timeout;
  var callbackName = "TripHelperJSONPCallback".concat(idx++);
  params[callbackKey] = callbackName;
  var reqUrl = "".concat(url, "?").concat((0, _utils.buildQuery)(params));
  var promise = new Promise(function (resolve, reject) {
    var jsonpCallback = function jsonpCallback(data) {
      resolve(data);
      delete window[callbackName];
    };
    window[callbackName] = jsonpCallback;
    useAjax ? (0, _request.request)({
      url: url,
      method: 'GET',
      data: params,
      dataType: 'script'
    }).catch(reject) : loadScript(reqUrl, reject);
  });
  return timeout && timeout > 0 ? (0, _utils.promiseTimeout)(timeout, promise) : promise;
}