const ctriputilClogging = require('../');
const assert = require('assert');

describe('Clogging 埋点测试用例', () => {
    let clogging;

    before(async () => {
        clogging = ctriputilClogging;
    });

    it('clogging 常规测试', async () => {
        let resultFlag = true,
            resultMessage = '';
        try {
            clogging.error(new Error('clogging error test'), {
                'aaa': '111',
                'bbb': '222'
            }, 'hello world');
            clogging.debug('clogging debug test');
            clogging.info('clogging info test');
            clogging.warn('clogging warn test');
            clogging.fatal('clogging fatal test');
        } catch (err) {
            resultFlag = false;
            resultMessage = err.message;
            clogging.error(err);
        }

        assert.ok(resultFlag, resultMessage);
    });

    it('clogging 发送超长日志测试(是否会被截断)', async () => {
        let resultFlag = true,
            resultMessage = '';
        try {
            clogging.custom({
                type: 'error',
                title: Array(100).fill(' clogging custom test').join(''),
                message: Array(1024).fill('custom message;custom message;custom message;custom message').join(''),
                addInfo: {
                    'test': 'just a clogging test',
                    'aa': {
                        'xx': 1,
                        'yy': 2
                    }
                },
                source: null
            });
        } catch (err) {
            resultFlag = false;
            resultMessage = err.message;
            clogging.error(err);
        }

        assert.ok(resultFlag, resultMessage);
    });

    it('clogging 定时发送日志测试', (done) => {
        let flag = 0;
        let interval = setInterval(function() {
            flag++;

            if (flag >= 5) {
                clearInterval(interval);
                done();
            }
            let data = {
                type: 'info',
                title: 'clogging title xxx',
                message: 'clogging message',
                addInfo: {
                    x: 1,
                    y: 2,
                    z: void(0),
                    'aa': {
                        'xx': 1,
                        'yy': 2
                    }
                }
            };
            try {
                clogging.custom(data);
                clogging.info('测试中文 ^_^ !!!');
                clogging.info({
                    x: 1,
                    y: 2
                }, '测试 TAGS');
            } catch (e) {
                done();
                clearInterval(interval);
            }
        }, 500);
    });
});