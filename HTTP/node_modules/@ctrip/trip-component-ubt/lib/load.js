"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.disableUBTScriptAutoLoad = exports.checkUBTLoaded = exports.loadUBTScript = exports.lazyLoadUBTScript = exports.hasLoadedUBT = exports.getUBTScriptLink = void 0;
var constant_1 = require("./constant");
var browser_1 = require("@ctrip/trip-component-utils/browser");
var isH5ByUserAgent = function () {
    if (typeof navigator === 'undefined') {
        return false;
    }
    var uaLower = navigator.userAgent.toLowerCase();
    var regex = /(ctrip|android|iphone|mobile|webos)/;
    var padRegex = /(ipad|pad)/;
    return regex.test(uaLower) && !padRegex.test(uaLower);
};
var isMobileAgent = function () {
    if (typeof window === 'undefined') {
        return false;
    }
    var pathname = window.location.pathname;
    var isH5 = /^\/m/.test(pathname) || isH5ByUserAgent();
    return isH5;
};
function getUBTScriptLink(_a) {
    var _b = _a === void 0 ? {} : _a, _c = _b.isOnline, isOnline = _c === void 0 ? !isMobileAgent() : _c, _d = _b.isDomestic, isDomestic = _d === void 0 ? browser_1.getGroup() === 'ctrip' : _d;
    return isOnline
        ? isDomestic
            ? constant_1.UBT_DOMESTIC_SCRIPT_LINK
            : constant_1.UBT_IBU_SCRIPT_LINK
        : isDomestic
            ? constant_1.UBT_H5_DOMESTIC_SCRIPT_LINK
            : constant_1.UBT_H5_IBU_SCRIPT_LINK;
    /* eslint-enable prettier/prettier */
}
exports.getUBTScriptLink = getUBTScriptLink;
function findUBTScriptElement() {
    var scripts = document.getElementsByTagName('script');
    for (var index = 0; index < scripts.length; index++) {
        var script = scripts[index];
        var src = script.src;
        if (src &&
            (src.indexOf('/code/ubt') > -1 || src.indexOf('/sysdev/ubt') > -1 || src.indexOf('/modules/ubt/trip') > -1)) {
            return script;
        }
    }
    return null;
}
function createUBTScriptElement(ubtScriptUrl) {
    if (ubtScriptUrl === void 0) { ubtScriptUrl = getUBTScriptLink(); }
    var date = new Date();
    var query = "?v=" + date.getFullYear() + date.getMonth() + "_" + date.getDate();
    var el = document.createElement('script');
    el.type = 'text/javascript';
    el.charset = 'utf-8';
    el.async = true;
    el.src = ubtScriptUrl + query;
    var b = document.getElementsByTagName('script')[0];
    if (b && b.parentElement) {
        b.parentElement.insertBefore(el, b);
    }
    else {
        document.body.appendChild(el);
    }
    return el;
}
function waitUBTScriptLoad(script) {
    return new Promise(function (resolve, reject) {
        script.addEventListener('error', function (e) {
            console.warn('load ubt js fail', e);
            reject(e);
        });
        script.addEventListener('load', function () {
            resolve();
        });
        script.addEventListener('readystatechange', function () {
            if (script.readyState === 'loaded' || script.readyState === 'complete') {
                resolve();
            }
        });
    });
}
function hasLoadedUBT() {
    if (typeof window === 'undefined') {
        return false;
    }
    return (typeof window.$_bf !== 'undefined' ||
        (window.__bfi && typeof window.__bfi.push === 'function' && window.__bfi.push !== Array.prototype.push) ||
        !!window.__BF_LOADING_FLAG__);
}
exports.hasLoadedUBT = hasLoadedUBT;
function _load(ubtScriptUrl) {
    if (hasLoadedUBT()) {
        return Promise.resolve();
    }
    var ubtScriptElement = findUBTScriptElement() || createUBTScriptElement(ubtScriptUrl);
    var promise = waitUBTScriptLoad(ubtScriptElement);
    return promise;
}
/**
 * 延迟加载 ubt script
 * @param cbOrPromise
 */
function lazyLoadUBTScript(cbOrPromise) {
    if (typeof window === 'undefined') {
        return Promise.resolve();
    }
    if (window.__BF_LOAD_PROMISE__) {
        return window.__BF_LOAD_PROMISE__;
    }
    var getLinkPromise;
    if (typeof cbOrPromise === 'function') {
        getLinkPromise = new Promise(function (resolve) {
            cbOrPromise(resolve);
        });
    }
    else {
        getLinkPromise = cbOrPromise;
    }
    var promise = getLinkPromise.then(_load);
    window.__BF_LOAD_PROMISE__ = promise;
    return promise;
}
exports.lazyLoadUBTScript = lazyLoadUBTScript;
function loadUBTScript(ubtScriptUrl) {
    if (typeof window === 'undefined') {
        return Promise.resolve();
    }
    if (window.__BF_LOAD_PROMISE__) {
        return window.__BF_LOAD_PROMISE__;
    }
    var promise = _load(ubtScriptUrl);
    window.__BF_LOAD_PROMISE__ = promise;
    return promise;
}
exports.loadUBTScript = loadUBTScript;
/**
 * 检查是否需要自行加载 ubt.js
 * 以下情形不加载 ubt.js
 * 1. 组件的使用方已经加载 ubt.js
 * 2. 组件的使用方通过 `disableUBTScriptAutoLoad` 方法禁用自动加载
 */
exports.checkUBTLoaded = function () {
    if (typeof window === 'object' && window.__BF_CUSTOM_LOAD_FLAG__) {
        return;
    }
    if (hasLoadedUBT() || findUBTScriptElement()) {
        // if page has load ubt script or loading ubt script,
        // we don't need check in next time
        exports.checkUBTLoaded = function () { };
        return;
    }
    loadUBTScript().then(function () {
        exports.checkUBTLoaded = function () { };
    });
};
function disableUBTScriptAutoLoad() {
    if (typeof window !== 'undefined') {
        window.__BF_CUSTOM_LOAD_FLAG__ = true;
    }
}
exports.disableUBTScriptAutoLoad = disableUBTScriptAutoLoad;
//# sourceMappingURL=load.js.map