import { Formatter } from '../base';
import { II18n, ROUNDING_MODE, Unit, UnitCollection } from '../types';
export declare class MeasurementFormatter extends Formatter {
    private readonly nf;
    constructor(i18n: II18n);
    formatString(value: number, type: Unit, useGrouping?: boolean, minimumFractionDigits?: number, maximumFractionDigits?: number, extendOption?: Partial<{
        roundingMode: ROUNDING_MODE;
        trimRedundantZero: boolean;
    }>): string;
    convert(value: number, fromType: Unit, toType: Unit, useGrouping?: boolean, minimumFractionDigits?: number, maximumFractionDigits?: number, extendOption?: Partial<{
        roundingMode: ROUNDING_MODE;
        trimRedundantZero: boolean;
    }>): string;
    convertToPreferences(value: number, fromType: Unit, preferencesUnit?: UnitCollection, useGrouping?: boolean, minimumFractionDigits?: number, maximumFractionDigits?: number, extendOption?: Partial<{
        roundingMode: ROUNDING_MODE;
        trimRedundantZero: boolean;
    }>): string;
    private getDefaultPreferences;
    private format;
}
