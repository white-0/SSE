"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.AR = exports.UK = exports.DA = exports.TR = exports.TL = exports.RU = exports.PT = exports.FR = exports.IT = exports.KK = exports.NO = exports.EL = exports.ES = exports.pt_PT = exports.FI = exports.SV = exports.PL = exports.NL = exports.DE = exports.EN = exports.DEFAULT = void 0;
var DEFAULT = function (integer, fraction, fractionBitsCount) {
    return true;
};
exports.DEFAULT = DEFAULT;
var EN = function (integer, fraction, fractionBitsCount) {
    return integer === 1 && fractionBitsCount === 0;
};
exports.EN = EN;
exports.DE = exports.EN;
exports.NL = exports.EN;
exports.PL = exports.EN;
exports.SV = exports.EN;
exports.FI = exports.EN;
exports.pt_PT = exports.EN;
var ES = function (integer, fraction, fractionBitsCount) {
    return integer === 1 && fraction === 0;
};
exports.ES = ES;
exports.EL = exports.ES;
exports.NO = exports.ES;
exports.KK = exports.ES;
exports.IT = exports.ES;
var FR = function (integer, fraction, fractionBitsCount) {
    return integer === 1 || integer === 0;
};
exports.FR = FR;
exports.PT = exports.FR;
var RU = function (integer, fraction, fractionBitsCount) {
    return fractionBitsCount === 0 && integer % 10 === 1 && integer % 100 !== 11;
};
exports.RU = RU;
var TL = function (integer, fraction, fractionBitsCount) {
    var mod10;
    if (fractionBitsCount === 0) {
        mod10 = integer % 10;
    }
    else {
        mod10 = Math.floor(fraction * Math.pow(10, fractionBitsCount)) % 10;
    }
    return mod10 !== 4 && mod10 !== 6 && mod10 !== 9;
};
exports.TL = TL;
var TR = function (integer, fraction, fractionBitsCount) {
    return integer === 1;
};
exports.TR = TR;
var DA = function (integer, fraction, fractionBitsCount) {
    return (integer === 1 && fraction === 0) || (fraction > 0 && (integer === 0 || integer === 1));
};
exports.DA = DA;
var UK = function (integer, fraction, fractionBitsCount) {
    return fractionBitsCount === 0 && integer % 10 === 1 && integer % 100 !== 11;
};
exports.UK = UK;
var AR = function (integer, fraction, fractionBitsCount) {
    return integer === 1 && fraction === 0;
};
exports.AR = AR;
