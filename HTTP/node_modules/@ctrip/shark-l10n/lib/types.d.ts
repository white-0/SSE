import dayjs from 'dayjs';
export type Dayjs = typeof dayjs;
export interface II18n {
    [key: string]: string;
}
export interface ILocaleSpecification {
    [key: string]: unknown;
    weekdays?: string[];
    weekdaysShort?: string[];
    months?: string[] | ((Dayjs: any, format: string) => string);
    monthsShort?: string[] | ((Dayjs: any, format: string) => string);
    meridiem?: (hour: number) => string;
}
export type Timestamp = number | string | Date;
export type Timezone = -12 | -11 | -10 | -9 | -8 | -7 | -6 | -5 | -4 | -3 | -2 | -1 | 0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10 | 11 | 12;
export interface INameModel {
    type: string;
    title: string;
    sample: string;
    sampleForEn: string;
}
export declare enum CredentialType {
    IDCardCredentialType = "IDCard",
    PassportCredentialType = "Passport",
    DrivingCardCredentialType = "DrivingCard",
    HomeReturnPermitCredentialType = "HRP",
    MTPCredentialType = "MTP",
    UsualCredentialType = "Usual",
    UsualNoMidNameCredentialType = "UsualNoMidName"
}
export declare enum ROUNDING_MODE {
    DOWN = 0,
    HALF_UP = 1,
    HALF_EVEN = 2,
    UP = 3
}
export declare enum Unit {
    Kilometer = "Kilometer",
    Mile = "Mile",
    SquareMeter = "SquareMeter",
    SquareFeet = "SquareFeet",
    Celsius = "Celsius",
    Fahrenheit = "Fahrenheit",
    Meter = "Meter",
    Feet = "Feet",
    Kilogram = "Kilogram",
    Pound = "Pound",
    Centimeter = "Centimeter",
    Inch = "Inch"
}
export declare enum UnitCollection {
    Unknown = "Unknown",
    MetricUnit = "MetricUnit",
    ImperialUnit = "ImperialUnit"
}
export declare const KEY_PREFERENCES_MEASUREMENT = "key.l10n.unit.measurement";
export declare const KEY_PREFERENCES_TEMPERATURE = "key.l10n.unit.temperature";
