import { BaseScope } from '../BaseScope';
export declare abstract class Aggregator {
    AggregatorQueue: object;
    StatData: any;
    constructor();
    addQueueInternal(): void;
    /**
     * BatSpan 中调用aggregate，将原始Tree 添加到聚合tree
     * @param originSpan
     */
    aggregate(originSpan: BaseScope): void;
    /**
     * 聚合一颗statMessageTree,以三个维度聚合
     * @param {string} _type
     * @param {string} _name
     * @param {number} _timestamp
     * @returns
    */
    makeSurSpanExist(_type: string, _name: string, _timestamp: number, type: string): any;
    /**
     * 发送一定时间段内聚合的tree
     */
    private sendData;
    private getTimeTampMm;
    protected abstract aggregateFilter(opts: {
        type?: string;
        name?: string;
    }): {
        type?: string;
        name?: string;
    };
}
