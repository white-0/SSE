/// <reference types="node" />
import { EventEmitter } from 'events';
import { BaseScope } from '../types/BaseScope';
/**
 * 发送队列
 */
declare class Queue extends EventEmitter {
    sendQueue: any[];
    private __batchUpdate;
    private dropMessageCount;
    constructor();
    addSendQueue(item: any): Promise<void>;
    private countMessage;
    restoreToSendQueue(item: BaseScope): void;
    consumeFromQueue(): BaseScope;
    getDropMessageCount(): number;
    /**
     * 进程退出时将日志保存到指定的文件,并返回保存的日志条数
     */
    saveToDisk(queueFile: string): number;
    deserialize(content: string): Array<any>;
    loadFromDisk(queueFile: string): number;
}
export declare const queue: Queue;
export {};
