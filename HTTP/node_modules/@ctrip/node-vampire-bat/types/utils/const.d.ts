export declare const SPAN_TIMEOUT = 30000;
export declare const QUEUE_LENGTH = 150;
export declare const OVERFLOW_QUEUE_LENGTH = 30;
export declare const CAT_MERGE_TREE = "_CatMergeTree";
export declare const DEFAULT_PORT = 2280;
export declare const SPECIAL_SOURCE_IP_LIST: string[];
export declare const FETCH_SERVER_TIME = 120000;
export declare const pm2Id: number;
export declare const CAT_TREE_AGGREGATOR = "CAT_TREE_AGGREGATOR";
export declare const ACT_MINI_VERSION = "018000000";
export declare const TRACE_PREFIX = "x-ctx-";
export declare const INFOSEC = "x-ctx-trace-source";
export declare const CANARY_REQ = "canaryreq";
export declare const UCS: {
    UCS_HEADER_IS_ZONE_REQUEST: string;
    UCS_HEADER_ZONE_CODE: string;
    UCS_CHECK_FAIL: string;
    UCS_ZONE_MISMATCH: string;
    UCS_ZONE_NOT_SET: string;
};
export declare const TYPES: {
    SPAN: string;
    EVENT: string;
    ERROR: string;
    TAGS: string;
    HEARTBEAT: string;
    STATMESSAGEEVENT: string;
    STATMESSAGE: string;
};
export declare const STATUS: {
    span: string;
    event: string;
    error: string;
    tags: string;
    heartbeat: string;
    statMessageEvent: string;
    statMessage: string;
};
export declare const CONNECT_SET: {
    highWaterMarkSwitch: boolean;
    highWaterMark: number;
    lowWaterMark: number;
    CONN_TIMEOUT: number;
};
export interface Span<T = any> {
    seq?: number;
    __type: string;
    __children?: Array<T>;
    __properties: object;
    __messageId: string;
}
export interface StatProperties {
    idc: string;
    region: string;
    az: string;
    count: number;
    sum: number;
    self: number;
    fail: number;
    min: number;
    max: number;
    messageId: string;
    maxMessageId: string;
    durations: string;
    distribution: string;
}
export declare const STAT_EVENT: {
    BATCH_FLAG: string;
    COUNT: string;
    EQUAL_SIGN: string;
    BATCH_SPLIT: string;
    FAIL: string;
    MESSAGE_ID: string;
};
