"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.sub = void 0;
const fs_1 = __importDefault(require("fs"));
const queue_1 = require("../queue");
const console_1 = require("../../utils/console");
require("../sender");
queue_1.queue.on('senderReady', () => {
    sub();
});
function sub() {
    let queueFile = process.argv[2];
    if (queueFile) {
        let queueLength = queue_1.queue.loadFromDisk(queueFile);
        if (queueLength) {
            (0, console_1.log)("[subProcSender] Load Queue Length: " + queueLength);
            let clock = setTimeout(function () {
                process.exit(1);
            }, 60000);
            setInterval(() => {
                if (queue_1.queue.sendQueue.length > 0) {
                    queue_1.queue.emit("exceed");
                }
            }, 1000);
            queue_1.queue.on("idle", function () {
                try {
                    fs_1.default.unlinkSync(queueFile);
                }
                catch (e) {
                    // empty
                }
                clearTimeout(clock);
                (0, console_1.log)("[subProcSender] All Task Finish");
                setTimeout(function () {
                    process.exit(0);
                }, 1000);
            });
        }
        else {
            process.exit(1);
        }
    }
}
exports.sub = sub;
