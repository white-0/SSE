"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const os_1 = __importDefault(require("os"));
const path_1 = __importDefault(require("path"));
const child_process_1 = require("child_process");
const node_vampire_appconfig_1 = __importDefault(require("@ctrip/node-vampire-appconfig"));
const node_vampire_util_1 = __importDefault(require("@ctrip/node-vampire-util"));
const const_1 = require("../../utils/const");
const queue_1 = require("../queue");
function argWrapper(arg) {
    return '"' + arg + '"';
}
process.on('SIGINT', function () {
    process.exit(1);
});
process.on('SIGBREAK', function () {
    process.exit(1);
});
process.on('SIGTERM', function () {
    process.exit(1);
});
process.on('exit', function () {
    let queueFile = path_1.default.resolve(os_1.default.tmpdir(), './node-vampire-cat-' + node_vampire_appconfig_1.default['AppID'] + '-' + const_1.pm2Id + '-' + (+new Date()) + '.json');
    let queueLength = queue_1.queue.saveToDisk(queueFile);
    if (queueLength) {
        _subProcSender(queueFile);
    }
});
function _subProcSender(queueFile) {
    let subProcFile = path_1.default.resolve(__dirname, './subProcSender');
    let env = node_vampire_util_1.default.copy(process.env);
    env.__CTRIP_APP_CONFIG_FILE__ = node_vampire_appconfig_1.default.appConfigFile;
    (0, child_process_1.spawn)(argWrapper(process.execPath), [argWrapper(subProcFile), argWrapper(queueFile)], {
        env: env,
        detached: true,
        stdio: 'ignore',
        shell: true
    }).unref();
}
