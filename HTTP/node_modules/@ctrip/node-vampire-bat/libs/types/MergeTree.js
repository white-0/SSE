"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.MergeTree = void 0;
const node_vampire_foundation_framework_1 = __importDefault(require("@ctrip/node-vampire-foundation-framework"));
const messageId_1 = require("../utils/messageId");
const BaseScope_1 = require("./BaseScope");
const const_1 = require("../utils/const");
const BatSpanAggregator_1 = require("./Aggregator/BatSpanAggregator");
class MergeTree extends BaseScope_1.BaseScope {
    constructor(...args) {
        super(...args);
        this.__properties = {};
        this.__type = const_1.TYPES.SPAN;
        this.status = const_1.STATUS[this.__type];
        this.outerIds = args[2];
        const __outerMessageId = this.outerIds && this.outerIds['x-cat-id'];
        this.__messageId = __outerMessageId || messageId_1.messageId.getMessageId();
        this.setProperties();
    }
    get __outerIds() {
        return this.outerIds;
    }
    // 兼容旧版本
    get __root() {
        return { __outerIds: this.outerIds };
    }
    set __outerIds(outerIds) {
        this.outerIds = outerIds;
    }
    setProperties() {
        this.__properties = {
            "Tree.Begin": new Date().getTime(),
            idc: node_vampire_foundation_framework_1.default.getServerPropertiesSync("idc"),
            region: node_vampire_foundation_framework_1.default.getServerPropertiesSync("region"),
            az: node_vampire_foundation_framework_1.default.getServerPropertiesSync("az"),
        };
    }
    beforeSend() {
        if (this.__close)
            return;
        this.baseBeforeSend();
        BatSpanAggregator_1.batSpanAggregator.aggregate(this);
    }
}
exports.MergeTree = MergeTree;
