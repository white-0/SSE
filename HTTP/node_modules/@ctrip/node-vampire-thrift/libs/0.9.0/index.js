const thrift = require('./thrift/index.js');

const TBinaryProtocol = require('./thrift/protocol.js').TBinaryProtocol;
const {
    TBufferedTransport,
    TFramedTransport
} = require('./thrift/transport.js');

thrift.serialize = function(data) {
    let chunks = [];
    let protocol = new TBinaryProtocol(new TBufferedTransport(void(0), (chunk) => {
        chunks.push(chunk);
    }));
    data.write(protocol);
    protocol.flush();
    let ret = Buffer.concat(chunks);
    return ret;
};

thrift.deserialize = function(Type, data) {
    let protocol = new TBinaryProtocol(new TFramedTransport(data));
    let ret = new Type();
    ret.read(protocol);
    return ret;
};

module.exports = {
    thrift,
    ttypes: require('./idl/clogging_v2_types.js'),
    collector: require('./idl/FreewayCollector.js'),
    service: require('./idl/FreewayService.js')
};