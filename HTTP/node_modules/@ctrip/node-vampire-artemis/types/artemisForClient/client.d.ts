import { CallerType } from '../utils/utils';
interface ArtemisOptions {
    serviceId: string;
    clientType?: CallerType.SOA | CallerType.QSCHEDULE;
    subEnv?: string;
    protocol?: string;
    userId?: string;
}
declare class ArtemisClient {
    private serviceId;
    private subEnv;
    private protocol;
    private discoveryConfig;
    private ucsHeaders;
    private clientType;
    private wsInstance;
    private userId;
    currentUrlsList: any;
    private initPromise;
    constructor(opt: ArtemisOptions);
    init(): Promise<void>;
    /**
     * SOA Client获取SOA Server 实例地址
     * @param operationName {string} operationName
     * @param routeId {string} request routeId,optional
     * @param userId {string} userId,optional
     * @returns
     */
    getServiceUrl(operationName?: string, routeId?: string | null, userId?: string | null): string;
    private getUrl;
    setUserId(userId: any): void;
    getServerAppIdByURL(url: any): string;
    getUcsHeaders(): object;
}
export declare class Client extends ArtemisClient {
    constructor(opt: ArtemisOptions);
}
export {};
