import getTripBootstrapServers from './appConfig';
import appConfig from '@ctrip/node-vampire-appconfig';
import http from '@ctrip/node-vampire-http';
import util from '@ctrip/node-vampire-util';
import ff from '@ctrip/node-vampire-foundation-framework';

interface ReqBody {
    'properties': {
        'idc': string,
        'host.name': string,
        'env': string,
        'app.id': string,
        'host.address': string,
        'az': string,
        'region': string
    }
}
class TripBootstrapServers {
    public bootstrapServerList: Array<string> = [];
    public bootstrapServerPort: number = null;
    public getServerPromise: Promise<any> = null;
    constructor() {
    }

    fetchBootstrapServers(): Promise<void> {
        return getTripBootstrapServers().then((reqUrl: string) => {
            const reqBody: ReqBody = {
                'properties':
                {
                    'idc': (ff.getServerPropertiesSync('idc') || "NTGXH") as string,
                    'host.name': util.getHostName(),
                    'env': (ff.getServerPropertiesSync('env') || appConfig['env']) as string,
                    'app.id': ff.getAppID(),
                    'host.address': ff.getHostIP(),
                    'az': ff.getServerPropertiesSync('az') as string,
                    'region': ff.getServerPropertiesSync('region') as string
                }
            };
            return http(reqUrl, { 'contentType': 'json' }, JSON.stringify(reqBody)).then((result) => {
                if (result && result.bootstrapServers && result.bootstrapServers.length > 0) {
                    this.bootstrapServerList = result.bootstrapServers;
                    this.bootstrapServerPort = result.port || 9300;
                }
                return;
            }).catch((err) => {
                return Promise.reject(`[@ctrip/node-vampire-triplog] fetchBootstrapServers error,${err}`);
            });
        }).catch((err) => {
            return Promise.reject(`[@ctrip/node-vampire-triplog] fetchBootstrapServers error,${err}`);
        });
    }
}
export const tripBootstrapServers = new TripBootstrapServers();