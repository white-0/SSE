// package: 
// file: clog.proto

/* tslint:disable */
/* eslint-disable */

import * as grpc from "@grpc/grpc-js";
import * as clog_pb from "./tripLog_pb";

interface ILogSenderService extends grpc.ServiceDefinition<grpc.UntypedServiceImplementation> {
    send: ILogSenderService_Isend;
}

interface ILogSenderService_Isend extends grpc.MethodDefinition<clog_pb.LogBatch, clog_pb.SendResult> {
    path: "/LogSender/send";
    requestStream: false;
    responseStream: false;
    requestSerialize: grpc.serialize<clog_pb.LogBatch>;
    requestDeserialize: grpc.deserialize<clog_pb.LogBatch>;
    responseSerialize: grpc.serialize<clog_pb.SendResult>;
    responseDeserialize: grpc.deserialize<clog_pb.SendResult>;
}

export const LogSenderService: ILogSenderService;

export interface ILogSenderServer extends grpc.UntypedServiceImplementation {
    send: grpc.handleUnaryCall<clog_pb.LogBatch, clog_pb.SendResult>;
}

export interface ILogSenderClient {
    send(request: clog_pb.LogBatch, callback: (error: grpc.ServiceError | null, response: clog_pb.SendResult) => void): grpc.ClientUnaryCall;
    send(request: clog_pb.LogBatch, metadata: grpc.Metadata, callback: (error: grpc.ServiceError | null, response: clog_pb.SendResult) => void): grpc.ClientUnaryCall;
    send(request: clog_pb.LogBatch, metadata: grpc.Metadata, options: Partial<grpc.CallOptions>, callback: (error: grpc.ServiceError | null, response: clog_pb.SendResult) => void): grpc.ClientUnaryCall;
}

export class LogSenderClient extends grpc.Client implements ILogSenderClient {
    constructor(address: string, credentials: grpc.ChannelCredentials, options?: Partial<grpc.ClientOptions>);
    public send(request: clog_pb.LogBatch, callback: (error: grpc.ServiceError | null, response: clog_pb.SendResult) => void): grpc.ClientUnaryCall;
    public send(request: clog_pb.LogBatch, metadata: grpc.Metadata, callback: (error: grpc.ServiceError | null, response: clog_pb.SendResult) => void): grpc.ClientUnaryCall;
    public send(request: clog_pb.LogBatch, metadata: grpc.Metadata, options: Partial<grpc.CallOptions>, callback: (error: grpc.ServiceError | null, response: clog_pb.SendResult) => void): grpc.ClientUnaryCall;
}
