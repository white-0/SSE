/**为clogging提供的数据发送接口
 * 2018-11-12
 * 需要将clogging和cat打通，原理是通过在发送clogging的时候，参数加上cat的行号lineNumber。
 * 这样在clogging界面中点击cat可以链接到 cat对应的行号显示
 *
 * 由于Node的异步特性，cat中的lineNumber随时会改变。如果直接在调用clogging时加入行号，一定会不准确。
 * 所以新增一个cat类型为logging，调用时只是加入一个特殊的cat。当cat发送时，根据类别区分到是logging，则发送给clogging。
 */

const util = require("@ctrip/node-vampire-util");
const queue = require("../libs/queue.js");
const truncateString = require("../libs/truncateString.js");

function CatLogging(parent, data) {
  // console.log('--data--', JSON.stringify(data));
  if (!parent) {
    throw new Error("Invalid Event Parent Span");
  }

  if (parent.constructor && parent.constructor.name == "Object") {
    for (let key in parent) {
      if (Object.prototype.hasOwnProperty.call(parent, key)) {
        this[key] = parent[key];
      }
    }
  } else if (parent.__close) {
    throw new Error("Invalid Event Parent Span Status");
  } else {
    this.__id = util.uid();
    this.__messageId = parent.__messageId;
    this.__type = "logging";
    this.__close = true;
    this.__parent = parent;
    this.__root = parent.__root;
    this.__startTime = this.__endTime = +new Date();
    this.__startMicroSeconds = this.__endMicroSeconds = util.getMicroSeconds();

    this.status = "0";
    this.data = data || "";

    if (this.__parent) {
      if (!this.__parent.__close) {
        this.__parent.__children.push(this);
      }
    } else {
      queue.addToSendQueue(this);
    }
  }
}

CatLogging.prototype.toString = function () {
  return (
    "LOGGING " +
    util.formatDateTime(this.__startTime, "hh:mm:ss,SSS") +
    truncateString(util.stringify(this.data), 50)
  );
};

module.exports = CatLogging;
