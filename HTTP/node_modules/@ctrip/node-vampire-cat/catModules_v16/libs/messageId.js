const foundationFramework = require("@ctrip/node-vampire-foundation-framework");
const util = require("@ctrip/node-vampire-util");
const cache = require("@ctrip/node-vampire-cache");
const Locker = require("@ctrip/node-vampire-locker");
const Cache = cache.Cache;

const AppID = foundationFramework.getAppID();
const cacheName = "node-vampire-cat-" + AppID;
const lockerName = "node-vampire-cat-MessageId-" + AppID;

let store = new Cache(cacheName, 512 * 1024);
let locker = new Locker(lockerName);

function getHourString() {
  return Math.floor(+new Date() / 3600000).toString();
}

const maxMsgSeq = 2147483647;
let msgCount = 0;

locker.lockSync();
if (!store[getHourString() + "-hour"]) {
  store[getHourString() + "-hour"] =
    Math.floor(maxMsgSeq / 60) * new Date().getMinutes();
}
locker.unlockSync();

let hostIp = util
  .getHostIp()
  .split(".")
  .map(function (item) {
    return util.fillZero(parseInt(item, 10).toString(16), 2);
  })
  .join("");

let messageId = {};

messageId.getMessageId = function () {
  let messageIdArr = [];
  messageIdArr.push(AppID);
  messageIdArr.push(hostIp);
  let hourStr = getHourString();
  messageIdArr.push(hourStr);
  let msgSeq = cache.increase(store, hourStr + "-hour", 1) % maxMsgSeq;
  messageIdArr.push(msgSeq);
  msgCount++;
  return messageIdArr.join("-");
};

messageId.getMessageIdCount = function () {
  return msgCount;
};

module.exports = messageId;
