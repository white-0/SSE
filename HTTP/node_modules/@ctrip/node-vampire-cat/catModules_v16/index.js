const os = require('os');
const path = require('path');
const spawn = require('child_process').spawn;
require('./libs/hook.js');
const appConfig = require('../appConfig.js');
const util = require('@ctrip/node-vampire-util');
const pm2 = require('./libs/pm2id');
const queue = require('./libs/queue.js');
const sender = require('./libs/sender.js');
sender.sendHeartbeat();

function argWrapper(arg) {
    return '"' + arg + '"';
}

process.on('SIGINT', function () {
    process.exit(1);
});

process.on('SIGBREAK', function () {
    process.exit(1);
});

process.on('SIGTERM', function () {
    process.exit(1);
});

process.on('exit', function () {
    let queueFile = path.resolve(os.tmpdir(), './node-vampire-cat-' + appConfig['AppID'] + '-' + pm2.id + '-' + (+new Date()) + '.json');
    let queueLength = queue.saveToDisk(queueFile);
    if (queueLength) {
        _subProcSender(queueFile, './queue.js');
    }
});

function _subProcSender(queueFile, _queue) {
    let subProcFile = path.resolve(__dirname, './libs/subProcSender.js');
    let env = util.copy(process.env);
    env.__CTRIP_APP_CONFIG_FILE__ = appConfig.appConfigFile;
    spawn(argWrapper(process.execPath), [argWrapper(subProcFile), argWrapper(queueFile), argWrapper(_queue)], {
        env: env,
        detached: true,
        stdio: 'ignore',
        shell: true
    }).unref();
}

module.exports = require('./export.js');
