const storage = require("./libs/storage");
const CatSpan = require("./types/CatSpan.js");
const CatSpanAggregator = require("./types/CatSpanAggregator.js");

function getActiveSpan() {
  let span = storage.getStore();
  if (span && span.__close) {
    span = null;
  }
  return span || null;
}

function getParentSpan() {
  return storage.getStore() || null;
}

function wrapActiveSpan(type) {
  return function () {
    let ret;
    let args = Array.prototype.slice.call(arguments, 0);
    let span = getParentSpan();
    if (span) {
      ret = span[type].apply(span, args);
    } else {
      if (type == "span") {
        ret = CatSpan.prototype.span.apply(null, args);
      } else {
        // wrapCatMergeTree
        span = new CatSpan(null, "_CatMergeTree", "_CatMergeTree");
        ret = span[type].apply(span, args);
        span.end(true);
      }
    }
    return ret;
  };
}

function isCanaryRequest() {
  const activeSpan = getParentSpan();
  return activeSpan && activeSpan.isCanaryRequest();
}

function isFromInfoSec() {
  const activeSpan = getParentSpan();
  return activeSpan && activeSpan.isFromInfoSec();
}

function isOriginatedFromInfoSec() {
  const activeSpan = getParentSpan();
  return activeSpan && activeSpan.isOriginatedFromInfoSec();
}
let cat = {
  span: wrapActiveSpan("span"),
  event: wrapActiveSpan("event"),
  error: wrapActiveSpan("error"),
  tags: wrapActiveSpan("tags"),
  http: require("./libs/http.js"),
  getActiveSpan: getActiveSpan,
  // getParentSpan: getParentSpan,
  getMessageId: require("./libs/messageId.js").getMessageId,
  isCanaryRequest: isCanaryRequest,
  isFromInfoSec: isFromInfoSec,
  isOriginatedFromInfoSec: isOriginatedFromInfoSec,
  // debug function, don't use in production
  __setCatSpanTimeout: (timeout) => {
    CatSpan.__timeout = timeout;
  },
  setURLTranscation: (callback) => {
    CatSpan.__setURLTranscation = callback;
  },
  setAggregatorRules: (opts) => {
    CatSpanAggregator.aggregatorRules = opts;
  }
};

module.exports = cat;