import {
  Timezone,
  DateTimeFormatter as DateTimeFormatterInBrowser,
  NumberFormatter as NumberFormatterInBrowser,
  DurationFormatter as DurationFormatterInBrowser,
  MeasurementFormatter as MeasurementFormatterInBrowser,
} from '@ctrip/shark-l10n';
import { Formatter } from '@ctrip/shark-l10n/lib/base';

export { Timezone } from '@ctrip/shark-l10n';

type OmitBaseFormatterMethod<F extends Formatter> = Omit<F, 'setI18n' | 'getI18n' | 'get'>;

export type DateTimeFormatter = OmitBaseFormatterMethod<DateTimeFormatterInBrowser>;

export type DateTimeFormatMethod = keyof DateTimeFormatter;

export type NumberFormatter = OmitBaseFormatterMethod<NumberFormatterInBrowser>;

export type DurationFormatter = OmitBaseFormatterMethod<DurationFormatterInBrowser>;

export type MeasurementFormatter = OmitBaseFormatterMethod<MeasurementFormatterInBrowser>;

export type L10nType = {
  NumberFormat(): NumberFormatter;
  DateTimeFormat(timezone?: Timezone, moment?: Moment): DateTimeFormatter;
  DurationFormat(locale: string): DurationFormatter;
  MeasurementFormat(): MeasurementFormatter;
  NameFormat(): NameFormatter;
  getPlural(key: string, locale: string, num: string | number, defaultValue?: string): string;
};
