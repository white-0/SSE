'use strict'
const http = require('http')
const assert = require('assert')
const cargo = require('../index')
const PORT = 3000

const server = http.createServer((req, res) => {
  const context = cargo.getCargoContext(req, res)

  const contextInfo = {
    language: context.getLanguage(),
    locale: context.getLocale(),
    currency: context.getCurrency(),
    group: context.getGroup(),
    site: context.getSite(),
    domain: context.getDomain()
  }

  const topCurrencies = cargo.select('TopCurrencies')
    .system()
    .group(contextInfo.group)
    .site(contextInfo.site)
    .query()

  const topCurrenciesFromContext = context.select('TopCurrencies')
    .system()
    .group()
    .site()
    .query()

  console.log(cargo.select('ibu.seo.robots.txt').group('ctrip').query())

  console.log(cargo.select('ibu.seo.robots.txt').group('trip').query())

  console.log(cargo.select('H5SupportedLocale').system().group('trip').locale('en-US')
    .queryExtendList().map(item => item.site && item.site.hosts.join(',')).join(','))

  const currencySwitchMap = cargo.getChannelCurrencySwitchMap('flights')

  assert.deepStrictEqual(topCurrencies, topCurrenciesFromContext)

  console.log(cargo.getTopCurrencies('trip', 'en').map(curr => curr.name))

  context.setBrowserCookies()

  res.end(JSON.stringify({
    contextInfo,
    topCurrencies,
    topCurrenciesFromContext,
    currencySwitchMap
  }))
})

const client = () => http.get({
  host: '127.0.0.1',
  port: PORT,
  query: 'ibulocale=en-us&curr=CNY',
  setHost: false,
  headers: {
    Host: 'www.dev.qa.nt.tripcorp.com'
  }
}, res => {
  let rawData = []
  res.on('data', (chunk) => {
    rawData.push(chunk)
  })
  res.on('end', () => {
    rawData = Buffer.concat(rawData).toString('utf8')
    try {
      const data = JSON.parse(rawData)
      console.log(data)
    } catch (e) {
      console.log(rawData)
    }
  })
})

cargo.init({
  logLevel: cargo.LOG_LEVEL.INFO
}).then(() => {
  server.listen({
    port: PORT
  })
}).then(() => {
  client()
})
