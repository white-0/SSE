'use strict'
const cacheManager = require('../cache')
const log = require('../log')
const queryMetric = require('../metric/query')

class QueryList {
  constructor (keyId, appId, conditions) {
    /** @type {string} */
    this.keyId = keyId

    /** @type {string} */
    this.appId = appId

    /** @type {Array<{field: string, value: number|string, name: string}>} */
    this.conditions = conditions

    this.query = queryMetric(this)(this.query, true)
  }

  /**
   * @return {import('../cache/cache-entry').Data []}
   */
  query () {
    if (!this.keyId) {
      return []
    }
    const results = cacheManager
      .getDataByKeyId(this.keyId)
      .filter(item => {
        if (item.appId !== this.appId) {
          return false
        }
        for (const condition of this.conditions) {
          const fieldValue = item[condition.field]
          if (fieldValue !== condition.value) {
            return false
          }
        }
        return true
      })

    if (!results.length) {
      log.warning('QUERY-LIST EMPTY', this.keyId, this.conditions)
    }

    log.debug('QUERY-LIST HIT', this.keyId, this.conditions, results)
    return results
  }
}

module.exports = QueryList
