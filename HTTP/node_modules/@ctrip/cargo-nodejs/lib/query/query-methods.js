'use strict'
const QueryFieldMap = require('./query-fields')
const QueryFieldList = Object.keys(QueryFieldMap).map(key => QueryFieldMap[key])
const SIZE = Symbol.for('CARGO#DATA_ITEM_SIZE')

/**
 * 给某项data加上size字段,size表示合法的查询field个数
 *
 * @param {import('../cache/cache-entry').Data} item
 * @return {...import('../cache/cache-entry').Data, [SIZE]: number}
 */
exports.injectItemSize = (item) => {
  item[SIZE] = QueryFieldList.reduce((size, fieldName) => {
    if (item[fieldName]) {
      size++
    }
    return size
  }, 0)
  return item
}

/**
 * 给conditions添加candidate的field
 */
exports.insertCandidate = (conditions, candidate) => {
  const newConditions = []
  for (const condition of conditions) {
    newConditions.push(condition)
    if (condition.field === QueryFieldMap.KEY) {
      newConditions.push({
        field: QueryFieldMap.CANDIDATE,
        value: candidate
      })
    }
  }
  return newConditions
}

/**
 * 判断某项data是否一定不匹配
 */
exports.itemCanRemove = (item, condition, expected) => {
  if (item[SIZE] > expected) {
    return true
  }
  const field = condition.field
  if (!item[field]) {
    return false
  }
  return !condition.value || (String(condition.value) !== String(item[field]))
}

/**
 * 判断某项data是否可匹配到查询
 */
exports.itemCanMatch = (item, conditions, maxIndex) => {
  if (item[SIZE] !== maxIndex) {
    return false
  }
  for (let i = 0; i < maxIndex; i++) {
    const condition = conditions[i]
    const fieldValue = item[condition.field]
    if (!fieldValue || String(fieldValue) !== String(condition.value)) {
      return false
    }
  }
  return true
}
