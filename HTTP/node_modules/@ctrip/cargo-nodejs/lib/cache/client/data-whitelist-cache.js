'use strict'
const is = require('is-type-of')
const CacheConfig = require('../cache-config')
const ConfigType = require('../../common/config-type')
const DataType = require('../../common/data-type')
const Foundation = require('../../common/foundation')
const CacheEntry = require('../base-cache-entry')
const generateCacheKey = require('../method/generate-cache-key')
const AbstractDataCache = require('./abstract-data-cache')
const soaClient = require('../../service/soa-client')

class DataWhiteListCache extends AbstractDataCache {
  constructor () {
    super(
      CacheConfig.ClientCacheName.DATA_WHITELIST,
      ConfigType.DATA_WHITELIST
    )
  }

  load () {
    if (this.isFirstLoad) {
      this.isFirstLoad = false
      return soaClient.getDataWhiteList(
        Foundation.appId,
        CacheConfig.DEFAULT_VERSION,
        true
      )
    }
    return soaClient.getDataWhiteList(
      Foundation.appId,
      this.getCacheVersion(),
      false
    )
  }

  convert (data) {
    if (!is.object(data)) {
      return null
    }
    const dataWhiteList = new CacheEntry(
      generateCacheKey(data.keyId, CacheConfig.KeyType.DATA_WHITELIST),
      DataType.DATA_WHITELIST
    )
    Object.assign(dataWhiteList, data)
    dataWhiteList.name = data.value
    return dataWhiteList
  }

  isNeededUpdate (previous, current) {
    return true
  }
}

module.exports = DataWhiteListCache
