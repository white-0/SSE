'use strict'
const is = require('is-type-of')
const CacheConfig = require('../cache-config')
const ConfigType = require('../../common/config-type')
const DataType = require('../../common/data-type')
const CacheEntry = require('../base-cache-entry')
const generateCacheKey = require('../method/generate-cache-key')
const AbstractCache = require('./abstract-cache')
const soaClient = require('../../service/soa-client')

class ChannelCache extends AbstractCache {
  constructor () {
    super(
      CacheConfig.ClientCacheName.CHANNEL,
      ConfigType.CHANNEL
    )
  }

  load () {
    if (this.isFirstLoad) {
      this.isFirstLoad = false
      return soaClient.getChannelData(
        CacheConfig.DEFAULT_VERSION,
        true
      )
    }
    return soaClient.getChannelData(
      this.getCacheVersion(),
      false
    )
  }

  convert (data) {
    if (!is.object(data)) {
      return null
    }
    const channel = new CacheEntry(
      generateCacheKey(data.name, CacheConfig.KeyType.CHANNEL),
      DataType.CHANNEL
    )
    Object.assign(channel, data)
    return channel
  }

  isNeededUpdate (previous, current) {
    return true
  }
}

module.exports = ChannelCache
