'use strict'
const is = require('is-type-of')
const CacheConfig = require('../cache-config')
const DataType = require('../../common/data-type')
const Foundation = require('../../common/foundation')
const CacheEntry = require('../base-cache-entry')
const generateCacheKey = require('../method/generate-cache-key')
const AbstractCache = require('./abstract-cache')
const soaClient = require('../../service/soa-client')

class ConfigCache extends AbstractCache {
  constructor () {
    super(CacheConfig.ClientCacheName.CONFIG, null)
  }

  load () {
    return soaClient.getConfigData(Foundation.appId)
  }

  convert (data) {
    if (!is.object(data)) {
      return null
    }
    const entry = new CacheEntry(
      generateCacheKey(`${data.appId}_${data.type}`, CacheConfig.KeyType.CONFIG),
      DataType.CONFIG
    )
    Object.assign(entry, data)
    return entry
  }

  isNeededUpdate (previous, current) {
    return true
  }
}

module.exports = ConfigCache
