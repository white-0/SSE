'use strict'
const is = require('is-type-of')
const Foundation = require('./foundation')

exports.parseJson = (data) => {
  if (!is.string(data)) {
    return {}
  }
  try {
    return JSON.parse(data)
  } catch (e) {
    return {}
  }
}

exports.convertLocale2H5Language = (locale, defaultValue = '') => {
  if (!locale) {
    return defaultValue
  }

  const mapper = {
    'en-US': 'en',
    'zh-HK': 'hk',
    'ja-JP': 'jp',
    'ko-KR': 'kr',
    'fr-FR': 'fr',
    'de-DE': 'de',
    'es-ES': 'es',
    'ru-RU': 'ru'
  }

  if (mapper[locale]) {
    return mapper[locale]
  }

  return locale.replace('-', '')
}

exports.convertH5Language2Locale = (language, defaultValue = '') => {
  if (!language) {
    return defaultValue
  }

  const mapper = {
    en: 'en-US',
    hk: 'zh-HK',
    jp: 'ja-JP',
    kr: 'ko-KR',
    fr: 'fr-FR',
    de: 'de-DE',
    es: 'es-ES',
    ru: 'ru-RU'
  }

  if (mapper[language]) {
    return mapper[language]
  }

  if (language.length >= 4) {
    return language.substring(0, 2).toLowerCase() + '-' + language.substring(2).toUpperCase()
  }

  return String(language)
}

exports.getHostByEnv = (hosts, subEnv = Foundation.serverEnv.subEnv) => {
  if (!is.array(hosts) || !hosts.length) {
    return ''
  }

  let { env } = Foundation.serverEnv
  let host = hosts[0]

  if (env.toLowerCase() === 'fat') {
    if (!subEnv) {
      env = 'dev'
    } else {
      env = subEnv
    }

    host = hosts.find(h => {
      return h.indexOf(env.toLowerCase()) >= 0 && h.indexOf('/') === -1
    })
  }

  return host || hosts[0]
}
