'use strict'
const is = require('is-type-of')
const { tripLog } = require('@ctrip/node-vampire-triplog')
const foundation = require('../common/foundation')
const { SDK_VERSION, DATA_SOURCE } = require('../common/constants')
const ES_METRIC_INDEX = 'ibu-cargo-client'

/**
 * ES埋点方法
 * @param {string} operationName 操作方法select/getChannelCurrencySwitch/getChannelCurrencySwitches
 * @param {string} key 查询的key
 * @param {string} status 方法返回状态
 * @param {number} elapsedTime 运行时长（微秒）
 * @param {string|object} result 返回结果
 * @param {string} params 入参
 * @param {string} pes 调用写法
 * @param {Error} exceptionType 异常类型
 * @param {string} exception 异常详情
 * @return {void}
 */
exports.sendMetric = (
  operationName,
  key,
  status,
  elapsedTime,
  result,
  params,
  pes,
  dataAppId,
  exceptionType = null,
  exception = null
) => {
  const indexes = {
    // general
    app_id: foundation.appId,
    client_ip: foundation.ip,
    sdk_version: SDK_VERSION,
    sdk_type: DATA_SOURCE,
    // userdef
    ip: foundation.ip,
    operation_name: operationName,
    select_key: key,
    data_app_id: dataAppId,
    status,
    elapsed_time: elapsedTime
  }

  const data = { result }
  if (pes) data.pes = pes
  if (params) data.parameters = params

  if (exceptionType !== null) {
    indexes.exception_type = exceptionType
    data.exception = exception
  }

  tripLog.custom({
    type: 'info',
    title: ES_METRIC_INDEX,
    message: is.isString(data) ? data : JSON.stringify(data),
    addInfo: indexes
  })
}

/**
 * 获得微秒精度的当前时间
 */
exports.now = () => {
  const hrtime = process.hrtime()
  return parseInt(hrtime[0] * 1000000 + hrtime[1] / 1000)
}
