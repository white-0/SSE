'use strict'
const { sendMetric, now } = require('./metric')
const { DEFAULT_APPID } = require('../common/constants')
const QueryFields = require('../query/query-fields')

/**
 * metric on query
 * @decorator
 * @param {import('../query/query'} queryObject
 * @return {Function} metric decorator on method Query.query
 */
module.exports = (queryObject) => (fn, isQueryList = false) => (...args) => {
  const operationName = 'select'

  let key = ''
  const dataAppId = queryObject.appId
  let pes = 'cargo.select({key})'

  for (const condition of queryObject.conditions) {
    if (condition.field === QueryFields.KEY) {
      key = condition.name
      continue
    }
    pes += `.${condition.field}(${condition.name})`
  }

  if (key !== '') {
    pes = pes.replace('{key}', key)
  }

  if (dataAppId === DEFAULT_APPID) {
    pes += '.system()'
  }

  pes += isQueryList ? '.queryList()' : '.query()'

  const startTime = now()
  const result = fn.call(queryObject, ...args)
  const elapsedTime = now() - startTime

  let hit, logResult
  if (isQueryList) {
    hit = result && result.length > 0
    logResult = JSON.stringify(result)
  } else {
    hit = result !== null && result !== ''
    logResult = result
  }

  sendMetric(
    operationName,
    key,
    hit ? 'hit' : 'no_hit',
    elapsedTime,
    logResult,
    '',
    pes,
    dataAppId
  )

  return result
}
