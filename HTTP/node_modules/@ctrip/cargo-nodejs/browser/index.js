"use strict";

var CONFIG = {
  HTML_DATA_ATTRIBUTE_NAME: 'data-cargo',
  H5: 'h5',
  ONLINE: 'online',
  // http://git.dev.sh.ctripcorp.com/ibu-framework/ibu-uaparser-sdk/-/blob/master/lib/constants.js
  PADS: ['ipad', 'playbook', 'tablet'],
  MOBILES: ['mobile', 'iphone', 'android', 'phone', 'wap', 'opera', 'opera mini', 'ucweb', 'windows ce', 'symbian', 'series', 'webos', 'sony', 'blackberry', 'dopod', 'nokia', 'samsung', 'palmsource', 'meizu', 'midp', 'cldc', 'motorola'],
  ENV_LIST: [{
    value: 'sandbox',
    keywords: ['sandbox']
  }, {
    value: 'fws',
    keywords: ['fws', 'fat', 'dev']
  }, {
    value: 'uat',
    keywords: ['uat']
  }, {
    value: 'lpt',
    keywords: ['lpt']
  }]
};
var CONTEXT_NAME = {
  LOCALE: 'locale',
  LANGUAGE: 'language',
  CURRENCY: 'currency',
  SITE: 'site',
  GROUP: 'group',
  CONTEXT_TYPE: 'contextType'
};
var getCargoContext = function getCargoContext(name) {
  var cargoContext = {};
  var attributeValue = window.document.getElementsByTagName('html')[0].getAttribute(CONFIG.HTML_DATA_ATTRIBUTE_NAME) || '';
  attributeValue.split(',').forEach(function (attr) {
    var attrs = attr.split(':');
    if (attrs.length === 2) {
      cargoContext[attrs[0]] = attrs[1];
    }
  });
  return name ? cargoContext[name] || '' : cargoContext;
};
var setCargoContext = function setCargoContext(name, value) {
  if (name && value) {
    var cargoContext = getCargoContext();
    cargoContext[name] = value;
    window.document.getElementsByTagName('html')[0].setAttribute(CONFIG.HTML_DATA_ATTRIBUTE_NAME, Object.entries(cargoContext).map(function (v) {
      return v.join(':');
    }).join());
  }
};
var getCookie = function getCookie(name) {
  var value = '';
  if (name) {
    value = "; ".concat(window.document.cookie).split("; ".concat(name, "=")).pop().split(';')[0];
  }
  return value;
};
var getClientType = function getClientType() {
  var ua = (window.navigator.userAgent || '').toLowerCase();
  if (!ua) {
    return CONFIG.ONLINE;
  }

  // isMobile && !iPad && !androidPad
  return CONFIG.MOBILES.some(function (item) {
    return ua.indexOf(item) !== -1;
  }) && !CONFIG.PADS.some(function (item) {
    return ua.indexOf(item) !== -1;
  }) && (!/android/.test(ua) || /mobile/.test(ua)) ? CONFIG.H5 : CONFIG.ONLINE;
};
var isH5 = function isH5(contextType) {
  var _contextType = contextType || getCargoContext(CONTEXT_NAME.CONTEXT_TYPE);
  if (_contextType) {
    return _contextType.toLowerCase() === CONFIG.H5;
  }
  if (getClientType() === CONFIG.H5) {
    return true;
  }
  var pathSplit = window.location.pathname.split('/');
  return pathSplit[1] === 'm';
};
var normalizeLocale = function normalizeLocale(locale) {
  if (/^[a-z]{2}(-|_)[a-z]{2}$/i.test(locale)) {
    var locales = locale.match(/[a-z]{2}/gi);
    return "".concat(locales[0].toLowerCase(), "-").concat(locales[1].toUpperCase());
  }
};
var cargo = {
  getLocale: function getLocale(contextType, ignoreLangAttr) {
    var locale = normalizeLocale(getCargoContext(CONTEXT_NAME.LOCALE));
    if (!locale && !ignoreLangAttr) {
      locale = normalizeLocale(window.document.getElementsByTagName('html')[0].getAttribute('lang'));
    }
    if (!locale) {
      if (isH5(contextType)) {
        // h5
        locale = normalizeLocale(getCookie('ibu_h5_local'));
      } else {
        // online
        locale = normalizeLocale(getCookie('ibulocale') || getCookie('ibu_h5_local'));
      }
    }
    return locale || '';
  },
  setLocale: function setLocale(value) {
    var locale = normalizeLocale(value);
    if (locale) {
      setCargoContext(CONTEXT_NAME.LOCALE, locale);
    }
  },
  getLanguage: function getLanguage(contextType) {
    var language = getCargoContext(CONTEXT_NAME.LANGUAGE);
    if (!language) {
      if (isH5(contextType)) {
        // h5
        language = getCookie('ibu_h5_lang');
      } else {
        // online
        language = getCookie('ibulanguage');
      }
    }
    return (language || '').toLowerCase();
  },
  setLanguage: function setLanguage(value) {
    if (value && /^([a-z]{2}){1,2}$/i.test(value)) {
      setCargoContext(CONTEXT_NAME.LANGUAGE, value.toLowerCase());
    }
  },
  getCurrency: function getCurrency(contextType) {
    var currency = getCargoContext(CONTEXT_NAME.CURRENCY);
    if (!currency) {
      if (isH5(contextType)) {
        // h5
        currency = getCookie('ibu_h5_curr') || getCookie('cookiePricesDisplayed');
      } else {
        // online
        currency = getCookie('cookiePricesDisplayed');
      }
    }
    return (currency || '').toUpperCase();
  },
  setCurrency: function setCurrency(value) {
    if (value && /^[a-z]{3}$/i.test(value)) {
      setCargoContext(CONTEXT_NAME.CURRENCY, value.toUpperCase());
    }
  },
  getSite: function getSite() {
    var site = getCargoContext(CONTEXT_NAME.SITE);
    if (!site) {
      site = getCookie('ibu_h5_site');
    }
    return (site || '').toUpperCase();
  },
  setSite: function setSite(value) {
    if (value && /^[a-z]{2}$/i.test(value)) {
      setCargoContext(CONTEXT_NAME.SITE, value.toUpperCase());
    }
  },
  getGroup: function getGroup() {
    var group = getCargoContext(CONTEXT_NAME.GROUP);
    if (!group) {
      group = getCookie('ibu_h5_group');
    }
    return group || '';
  },
  setGroup: function setGroup(value) {
    if (value) {
      setCargoContext(CONTEXT_NAME.GROUP, value);
    }
  },
  getContextType: function getContextType() {
    return isH5() ? CONFIG.H5 : CONFIG.ONLINE;
  },
  setContextType: function setContextType(value) {
    if (value && [CONFIG.H5, CONFIG.ONLINE].includes(value.toLowerCase())) {
      setCargoContext(CONTEXT_NAME.CONTEXT_TYPE, value.toLowerCase());
    }
  },
  getEnv: function getEnv() {
    var env = 'prod';
    var hostname = window.location.hostname || window.location.host;
    CONFIG.ENV_LIST.forEach(function (v) {
      v.keywords.forEach(function (keyword) {
        if (hostname.indexOf(keyword) > -1) {
          env = v.value;
          return true;
        }
      });
      if (env) {
        return true;
      }
    });
    return env;
  }
};
if (typeof window !== 'undefined') {
  window.cargo = cargo;
}
module.exports = cargo;