'use strict'
const assert = require('assert')

/**
 * @param {import('../index')} cargo
 */
module.exports = (cargo) => {

  it('getChannel("home")', () => {
    const channel = cargo.getChannel('home')
    assert.strictEqual(channel.id, 1)
    assert.strictEqual(channel.name, 'home')
    assert.strictEqual(channel.alias, 'home,main,welcome')
    assert.strictEqual(channel.version, 1)
  })

  it('getChannel("Home")', () => {
    const channel = cargo.getChannel('home')
    assert.strictEqual(channel.id, 1)
    assert.strictEqual(channel.name, 'home')
    assert.strictEqual(channel.alias, 'home,main,welcome')
    assert.strictEqual(channel.version, 1)
  })

  it('getChannel(null)', () => {
    assert.strictEqual(cargo.getChannel(null), null)
  })

  it('getChannel("0")', () => {
    assert.strictEqual(cargo.getChannel("0"), null)
  })

  it('getCurrency("AUD")', () => {
    const currency = cargo.getCurrency('AUD')
    assert.strictEqual(currency.id, 1)
    assert.strictEqual(currency.name, 'AUD')
    assert.strictEqual(currency.version, 1)
  })

  it('getCurrency("aud")', () => {
    const currency = cargo.getCurrency('aud')
    assert.strictEqual(currency.id, 1)
    assert.strictEqual(currency.name, 'AUD')
    assert.strictEqual(currency.version, 1)
  })

  it('getCurrency(1)', () => {
    assert.strictEqual(cargo.getCurrency(1), null)
  })

  it('getCurrency("0")', () => {
    assert.strictEqual(cargo.getCurrency("0"), null)
  })

  it('getGroup("ctrip")', () => {
    const group = cargo.getGroup('ctrip')
    assert.strictEqual(group.id, 1)
    assert.strictEqual(group.name, 'Ctrip')
    assert.strictEqual(group.description, '*.ctrip.com')
    assert.strictEqual(group.version, 3)
  })

  it('getGroup("TRIP")', () => {
    const group = cargo.getGroup('TRIP')
    assert.strictEqual(group.id, 2)
    assert.strictEqual(group.name, 'Trip')
    assert.strictEqual(group.description, '*.trip.com')
    assert.strictEqual(group.version, 2)
  })

  it('getGroup(1)', () => {
    assert.strictEqual(cargo.getGroup(1), null)
  })

  it('getGroup("0")', () => {
    assert.strictEqual(cargo.getGroup("0"), null)
  })

  it('getLocale("en-us")', () => {
    const locale = cargo.getLocale('en-us')
    assert.strictEqual(locale.id, 1)
    assert.strictEqual(locale.name, 'en-US')
    assert.strictEqual(locale.description, '美式英文（默认语种）')
    assert.strictEqual(locale.version, 1)
  })

  it('getLocale("en-US")', () => {
    const locale = cargo.getLocale('en-US')
    assert.strictEqual(locale.id, 1)
    assert.strictEqual(locale.name, 'en-US')
    assert.strictEqual(locale.description, '美式英文（默认语种）')
    assert.strictEqual(locale.version, 1)
  })

  it('getLocale(1)', () => {
    assert.strictEqual(cargo.getLocale(1), null)
  })

  it('getLocale("0")', () => {
    assert.strictEqual(cargo.getLocale("0"), null)
  })

  it('getSource("android")', () => {
    const source = cargo.getSource('android')
    assert.strictEqual(source.id, 1)
    assert.strictEqual(source.name, 'ANDROID')
    assert.strictEqual(source.version, 1)
  })

  it('getSource("ANDROID")', () => {
    const source = cargo.getSource('ANDROID')
    assert.strictEqual(source.id, 1)
    assert.strictEqual(source.name, 'ANDROID')
    assert.strictEqual(source.version, 1)
  })

  it('getSource(1)', () => {
    assert.strictEqual(cargo.getSource(1), null)
  })

  it('getSource("0")', () => {
    assert.strictEqual(cargo.getSource("0"), null)
  })

  it('getSite("ctrip", "EN")', () => {
    const site = cargo.getSite('ctrip', 'EN')
    assert.strictEqual(site.id, 1)
    assert.strictEqual(site.name, 'EN')
    assert.strictEqual(site.description, 'Ctrip的EN市场...')
    assert.strictEqual(site.groupId, 1)
    assert.strictEqual(site.hosts.join(','), "english.dev.qa.nt.ctripcorp.com,english.fat1.qa.nt.ctripcorp.com,english.ctrip.fat1.qa.nt.ctripcorp.com,english.fat8.qa.nt.ctripcorp.com,english.fat55.qa.nt.ctripcorp.com,english.fat56.qa.nt.ctripcorp.com,english.fat90.qa.nt.ctripcorp.com,english.fat274.qa.nt.ctripcorp.com,accounts.dev.qa.nt.ctripcorp.com/global/english,accounts.fat1.qa.nt.ctripcorp.com/global/english,accounts.fat8.qa.nt.ctripcorp.com/global/english,accounts.fat55.qa.nt.ctripcorp.com/global/english,accounts.fat56.qa.nt.ctripcorp.com/global/english,accounts.fat274.qa.nt.ctripcorp.com/global/english,accounts.dev.qa.nt.ctripcorp.com/global/en,accounts.fat1.qa.nt.ctripcorp.com/global/en,accounts.fat8.qa.nt.ctripcorp.com/global/en,accounts.fat55.qa.nt.ctripcorp.com/global/en,accounts.fat56.qa.nt.ctripcorp.com/global/en,accounts.fat274.qa.nt.ctripcorp.com/global/en")
  })

  it('getSite("TRIP", "HK")', () => {
    const site = cargo.getSite('TRIP', 'HK')
    assert.strictEqual(site.id, 16)
    assert.strictEqual(site.name, 'HK')
    assert.strictEqual(site.description, 'Trip的香港市场')
    assert.strictEqual(site.groupId, 2)
    assert.strictEqual(site.hosts.join(','), "hk.dev.qa.nt.tripcorp.com,hk.fat1.qa.nt.tripcorp.com,hk.fat8.qa.nt.tripcorp.com,hk.fat55.qa.nt.tripcorp.com,hk.fat56.qa.nt.tripcorp.com,hk.fat90.qa.nt.tripcorp.com,hk.fat274.qa.nt.tripcorp.com,www.dev.qa.nt.tripcorp.com/global/hk,www.fat1.qa.nt.tripcorp.com/global/hk,www.fat8.qa.nt.tripcorp.com/global/hk,www.fat55.qa.nt.tripcorp.com/global/hk,www.fat56.qa.nt.tripcorp.com/global/hk,www.fat274.qa.nt.tripcorp.com/global/hk")
  })

  it('getSite("not_a_valid_group", "EN")===null', () => {
    assert.strictEqual(cargo.getSite('not_a_valid_group', 'EN'), null)
  })

  it('getSite("ctrip", 0)===null', () => {
    assert.strictEqual(cargo.getSite('ctrip', 0), null)
  })

  it('getSiteByHost("www.dev.qa.nt.tripcorp.com")', () => {
    const site = cargo.getSiteByHost('www.dev.qa.nt.tripcorp.com')
    assert.strictEqual(site.id, 15)
    assert.strictEqual(site.name, 'EN')
    assert.strictEqual(site.description, 'Trip的英国市场')
    assert.strictEqual(site.groupId, 2)
    assert.strictEqual(site.hosts.join(','), 'www.fat1.qa.nt.tripcorp.com,www.fat8.qa.nt.tripcorp.com,www.fat55.qa.nt.tripcorp.com,www.fat56.qa.nt.tripcorp.com,www.fat90.qa.nt.tripcorp.com,www.fat274.qa.nt.tripcorp.com,www.trip.fat1290.qa.nt.ctripcorp.com,www.fat1.qa.nt.tripcorp.com/global/english,www.fat8.qa.nt.tripcorp.com/global/english,www.fat55.qa.nt.tripcorp.com/global/english,www.fat56.qa.nt.tripcorp.com/global/english,www.fat274.qa.nt.tripcorp.com/global/english,www.fat1.qa.nt.tripcorp.com/global/en,www.fat8.qa.nt.tripcorp.com/global/en,www.fat55.qa.nt.tripcorp.com/global/en,www.fat56.qa.nt.tripcorp.com/global/en,www.fat274.qa.nt.tripcorp.com/global/en,www.dev.qa.nt.tripcorp.com')
  })

  it('getSiteByHost("english.dev.qa.nt.ctripcorp.com")', () => {
    const site = cargo.getSiteByHost('english.dev.qa.nt.ctripcorp.com')
    assert.strictEqual(site.id, 1)
    assert.strictEqual(site.name, 'EN')
    assert.strictEqual(site.description, 'Ctrip的EN市场...')
    assert.strictEqual(site.groupId, 1)
    assert.strictEqual(site.hosts.join(','), "english.dev.qa.nt.ctripcorp.com,english.fat1.qa.nt.ctripcorp.com,english.ctrip.fat1.qa.nt.ctripcorp.com,english.fat8.qa.nt.ctripcorp.com,english.fat55.qa.nt.ctripcorp.com,english.fat56.qa.nt.ctripcorp.com,english.fat90.qa.nt.ctripcorp.com,english.fat274.qa.nt.ctripcorp.com,accounts.dev.qa.nt.ctripcorp.com/global/english,accounts.fat1.qa.nt.ctripcorp.com/global/english,accounts.fat8.qa.nt.ctripcorp.com/global/english,accounts.fat55.qa.nt.ctripcorp.com/global/english,accounts.fat56.qa.nt.ctripcorp.com/global/english,accounts.fat274.qa.nt.ctripcorp.com/global/english,accounts.dev.qa.nt.ctripcorp.com/global/en,accounts.fat1.qa.nt.ctripcorp.com/global/en,accounts.fat8.qa.nt.ctripcorp.com/global/en,accounts.fat55.qa.nt.ctripcorp.com/global/en,accounts.fat56.qa.nt.ctripcorp.com/global/en,accounts.fat274.qa.nt.ctripcorp.com/global/en")
  })

  it('getSiteByHost("localhost")===null', () => {
    assert.strictEqual(cargo.getSiteByHost('localhost'), null)
  })

  it('getSiteByHost("trip.com")===null', () => {
    assert.strictEqual(cargo.getSiteByHost('trip.com'), null)
  })

  it('getChannelCurrencySwitch("", "USD")', () => {
    assert.strictEqual(cargo.getChannelCurrencySwitch('', 'USD'), true)
  })

  it('getChannelCurrencySwitch("", "NOT_FOUND")', () => {
    assert.strictEqual(cargo.getChannelCurrencySwitch('', 'NOT_FOUND'), true)
  })

  it('getChannelCurrencySwitch("", "NZD")', () => {
    assert.strictEqual(cargo.getChannelCurrencySwitch('', 'NZD'), false)
  })

  it('getSupportedCurrencies()', () => {
    assert.deepStrictEqual(cargo.getSupportedCurrencies().map(curr => curr.name), [
      'TWD', 'PHP', 'NZD', 'MYR', 'BRL', 'KRW', 'PLN', 'JPY', 'GBP', 'INR',
      'HKD', 'EUR', 'CAD', 'AUD', 'CNY', 'IDR', 'CHF', 'SGD', 'RUB', 'USD',
      'THB', 'VND', 'SAR', 'AED'
    ])
  })

  it('getTopCurrencies("trip", "en")', () => {
    assert.deepStrictEqual(cargo.getTopCurrencies('trip', 'en').map(curr => curr.name), [
      'USD', 'CNY', 'HKD', 'SGD', 'EUR'
    ])
  })

  it('getSupportedLocales(cargo.CONTEXT_TYPE.ONLINE, "trip", "hk")', () => {
    assert.deepStrictEqual(
      cargo.getSupportedLocales(cargo.CONTEXT_TYPE.ONLINE, 'trip', 'hk').map(locale => locale.name),
      [ 'zh-HK', 'en-HK' ])
  })

  it('getSupportedLocales(cargo.CONTEXT_TYPE.H5, "trip", "hk")', () => {
    assert.deepStrictEqual(cargo.getSupportedLocales(cargo.CONTEXT_TYPE.H5, 'trip', 'hk').map(locale => locale.name),
      [
        'en-US', 'en-GB', 'zh-HK', 'en-HK', 'ja-JP', 'ko-KR', 'en-SG', 'en-AU',
        'fr-FR', 'de-DE', 'es-ES', 'ru-RU', 'vi-VN', 'id-ID', 'th-TH', 'en-MY',
        'it-IT', 'pl-PL', 'tr-TR', 'pt-BR', 'el-GR', 'nl-NL', 'en-IL', 'en-SA',
        'en-AE', 'zh-TW'
      ]
    )
  })

  it('getSupportedLocales(cargo.CONTEXT_TYPE.H5, "trip", "hk", true)', () => {
    assert.deepStrictEqual(cargo.getSupportedLocales(cargo.CONTEXT_TYPE.H5, 'trip', 'hk', true).map(locale => locale.name),
      [ 'zh-HK', 'en-HK' ])
  })

  it('getLocaleSites("en-us", "trip")', () => {
    assert.deepStrictEqual(cargo.getLocaleSites('en-us', 'trip'), [
      { name: 'EN', host: 'www.dev.qa.nt.tripcorp.com' }
    ])
  })

  it('getDefaultDomainByLocale("trip", "en-US")', () => {
    assert.deepStrictEqual(cargo.getDefaultDomainByLocale('trip', 'en-US'),
      { domain: 'www.dev.qa.nt.tripcorp.com', message: '', isDefault: false })
  })

  it('getDefaultDomainByLocale("trip", "en-US", "fat0")', () => {
    assert.deepStrictEqual(cargo.getDefaultDomainByLocale('trip', 'en-US', 'fat0'),
      { domain: 'www.fat0.qa.nt.tripcorp.com', message: '', isDefault: false })
  })

  it('getDefaultLocaleByDomain()', () => {
    assert.deepStrictEqual(cargo.getDefaultLocaleByDomain(),
      { locale: 'en-XX', message: 'IllegalArgument:', isDefault: true })
  })

  it('getDefaultLocaleByDomain("kr.fat1.qa.nt.tripcorp.co")', () => {
    assert.deepStrictEqual(cargo.getDefaultLocaleByDomain('kr.fat1.qa.nt.tripcorp.com'),
      { locale: 'ko-KR', message: '', isDefault: false })
  })

  it('getDefaultSiteByLocale("trip", "en-US")', () => {
    assert.strictEqual(cargo.getDefaultSiteByLocale('trip', 'en-US'), 'EN')
  })

  it('getDefaultSiteByLocale("trip", "ja-JP")', () => {
    assert.strictEqual(cargo.getDefaultSiteByLocale('trip', 'ja-JP'), 'JP')
  })

  it('getDefaultSiteByLocale()', () => {
    assert.strictEqual(cargo.getDefaultSiteByLocale(), 'EN')
  })

  it('getDefaultCurrencyBySite("trip", "EN")', () => {
    assert.strictEqual(cargo.getDefaultCurrencyBySite('trip', 'EN'), 'USD')
  })

  it('getDefaultCurrencyBySite("trip", "JP")', () => {
    assert.strictEqual(cargo.getDefaultCurrencyBySite('trip', 'JP'), 'JPY')
  })

  it('getDefaultCurrencyByLocale("trip", "en-US")', () => {
    assert.strictEqual(cargo.getDefaultCurrencyByLocale('trip', 'en-US'), 'USD')
  })

  it('getDefaultCurrencyByLocale("trip", "ja-JP")', () => {
    assert.strictEqual(cargo.getDefaultCurrencyByLocale('trip', 'ja-JP'), 'JPY')
  })
}
