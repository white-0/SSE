"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.appInfo = exports.AppInfo = void 0;
const Status_1 = require("./Status");
const node_vampire_appconfig_1 = __importDefault(require("@ctrip/node-vampire-appconfig"));
const node_vampire_foundation_framework_1 = __importDefault(require("@ctrip/node-vampire-foundation-framework"));
const node_vampire_http_1 = __importDefault(require("@ctrip/node-vampire-http"));
const config_1 = require("./config");
const startTime = new Date();
const ENV = node_vampire_appconfig_1.default['Env'];
class AppInfo {
    constructor() {
        this.appName = ''; // "应用名称"
        this.appChineseName = ''; //"应用中文名"
        this.AppStartUpTime = startTime.toDateString(); // '应用启动时间'
        this.appVersion = null; // '应用版本'
        this.appOwner = ''; //'应用管理员'
        this.appOwnerEmail = ''; // '应用负责人Email'
        this.appBackup = ''; // '应用后备负责人'
        this.appStatus = Status_1.AppStatus[0]; // '应用状态'
        this.latestNews = ''; //'应用最新消息'
        this.appType = process.env['PAAS_TYPE'] || ''; //'应用类型'(fc,soa-server,slsoa,nfes,normal)
        this.container = ''; //'容器类型'
        this.importanceLevel = ''; //'是否是核心应用'
        this.app_Up_Time = 0; //运行时间
        this.oldStatus = null;
        this.appStatus = Status_1.AppStatus[0];
    }
    setAppStatus(status) {
        this.oldStatus = this.appStatus;
        this.appStatus = status;
        if (this.appStatus != this.oldStatus) {
            // notifyStatusListener 
        }
    }
    getStatus() {
        return this.appStatus;
    }
    setLatestNews(latestNews) {
        this.latestNews = latestNews;
    }
    getLatestNews() {
        return this.latestNews;
    }
    getData() {
        return Promise.all([this.cmsGetAppInfo(), node_vampire_foundation_framework_1.default.getEnv()]).then(([appInfo, _env]) => {
            const appOwnerInfo = appInfo.appidUserRoles.filter(role => role.role === 'AppOwner' && role).map(item => item.roleAccount) || [];
            this.appOwner = appOwnerInfo.join(',');
            //const appAdmins = appInfo.appidUserRoles.filter(role => role.role === 'AppAdmin' && role).map(item => item.roleAccount + '@ctrip.com') || [];
            //this.appAdmins = appAdmins.join(',');
            this.app_Up_Time = new Date().getTime() - startTime.getTime();
            this.appOwnerEmail = appOwnerInfo.map(item => item + '@trip.com').join(',');
            this.appName = appInfo.appName;
            this.appChineseName = appInfo.chineseName;
            this.appBackup = appInfo.backupContacters;
            this.container = appInfo.appContainer;
            this.importanceLevel = appInfo.appImportance;
            return JSON.stringify({
                appid: node_vampire_appconfig_1.default['appid'],
                appOwner: this.appOwner,
                appStatus: this.appStatus,
                upTime: this.app_Up_Time,
                appOwnerEmail: this.appOwnerEmail,
                appName: this.appName,
                appChineseName: this.appChineseName,
                AppStartUpTime: this.AppStartUpTime,
                appVersion: this.appVersion,
                appBackup: this.appBackup,
                appContainer: this.container,
                appType: this.appType,
                importanceLevel: this.importanceLevel,
                latestNews: this.latestNews,
            });
        });
    }
    cmsGetAppInfo() {
        return (0, node_vampire_http_1.default)(config_1.CONFIG['cms.appinfo'], { contentType: 'json' }, JSON.stringify({
            access_token: config_1.CONFIG['cms.appinfo.token'],
            request_body: { appId: node_vampire_appconfig_1.default['AppId'] }
        })).then((data) => {
            if (data && data.status == true && data.data) {
                return data.data[0];
            }
            else {
                return;
            }
        });
    }
}
exports.AppInfo = AppInfo;
exports.appInfo = new AppInfo();
