"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const node_vampire_foundation_framework_1 = __importDefault(require("@ctrip/node-vampire-foundation-framework"));
const CtripIgnitePlugin_1 = require("./CtripIgnitePlugin");
const SimpleLogger_1 = require("../util/SimpleLogger");
CtripIgnitePlugin_1.CtripIgnitePlugin.register({
    igniteName: 'CtripEnvIgnite',
    igniteType: 'sdk',
    /**
     * 组件或应用的帮助页面链接，帮助页面里最好包含联系人和基本介绍以及如何利用点火日志排错的信息
     * @return 组件或应用的帮助wiki链接
     */
    helpUrl: () => {
        return 'http://pages.release.ctripcorp.com/fx-front-end/node-vampire-books/commonModules/foundationframework.html';
    },
    /**
   *可以将组件或应用的初始化动作放在里面，初始化中有致命问题时，可返回false。返回false会导致点火失败，点火失败的应用不会被拉入集群
   * @return true时，初始化成功。false时，初始化失败，导致点火失败。
   */
    warmUp: () => {
        return Promise.all([node_vampire_foundation_framework_1.default.getEnv(), node_vampire_foundation_framework_1.default.getIDC()]).then(() => {
            SimpleLogger_1.simpleLogger.info('CtripEnvIgnite: get env,idc success');
            return Promise.resolve(true);
        }).catch(() => {
            return Promise.resolve(false);
        });
    },
    /**
    * 对组件或应用极为重要的一些配置（比如组件或应用的初始化参数：url,timeout等）
    * @return 包含重要配置的map
    */
    coreConfigs: () => {
        return {};
    },
    /**
     * 用来执行组件或应用的自检操作
     * @return true时，自检成功。false时，自检失败，导致点火失败。
     */
    selfCheck: () => {
        return Promise.resolve(true);
    }
});
