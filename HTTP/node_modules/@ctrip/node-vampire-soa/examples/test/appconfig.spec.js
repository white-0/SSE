const proxyquire = require('proxyquire');
const assert = require('chai').assert;
describe('appConfig.js UT', () => {
    let appconfig;
    before(() => {
        appconfig = proxyquire('../../appConfig', {
            '@ctrip/node-vampire-foundation-framework': {
                getServerProperties: () => {
                    return Promise.resolve({
                        env: 'PRO',
                        tooling: false,
                        pci: false,
                        tenant: 'DEFAULT',
                        cloudprovider: 'ALI',
                        idc: 'SHA-ALI',
                        region: 'SHA-ALI',
                        corp: 'CTRIP',
                        host_type: 'docker',
                        bigdata: false
                    });
                },
                getAppID: () => {
                    return ''
                },
                getEnv: () => {
                    return Promise.resolve('PRO');
                },
                getSubEnv: () => {
                    return Promise.resolve(null);
                },
                getIDC: () => {
                    return Promise.resolve('SHA-ALI');
                },
                getConfig: () => {
                    return Promise.resolve({});
                }
            }
        })
    });
    it('getQconfigFileName,return qconfigFileName', (done) => {
        appconfig.getQconfigFileName('soa').then((_qconfigName) => {
            assert(`100012112:artemis-reserved${_qconfigName}.properties` === '100012112:artemis-reserved_default_ali_sha-ali_sha-ali_false.properties'); 
            done();
        }).catch((err) => {
            console.log(err)
        })
    });
});