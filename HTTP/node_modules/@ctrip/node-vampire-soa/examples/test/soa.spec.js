process.mainModule = {filename: __filename};
const Soa = require('../../soa');
const assert = require('assert');
const nock = require('nock');
nock('http://127.0.0.1/nodejs/json')
    .post('/hello')
    .reply(200, {
        ResponseStatus: {
            Timestamp: '/Date(1589772557210+0800)/',
            Ack: 'Success',
            Errors: [],
            Extension: [[Object], [Object], [Object]]
        },
        IP: 'test case'
    })

nock('http://127.0.0.1/nodejs').log(console.log).get('/_operationinfo')
    .reply(200, [{
        "Name": "hello",
        "RequestMessage": {"Json": "{\"key\":\"String\"}"},
        "ResponseMessage": {"Json": "{\"key\":\"String\"}"}
    }, {"Name": "vi/health", "RequestMessage": {"Json": "{}"}, "ResponseMessage": {"Json": "{}"}}]);

describe('SOA 测试用例', () => {

    let soa

    before(async () => {
        soa =Soa
    })
    it('soa 应用访问测试', (done) => {
        try {
            new soa({
                url: 'http://127.0.0.1/nodejs/'
            }, (err, testSoa) => {
                if (err) {
                    console.log('initFailed');
                    done();
                }else {
                    console.log('initOK');
                    invoke(testSoa, (err, data) => {
                        console.log(data);
                        done();
                    })
                }
            });
        } catch (err) {
            assert.throws(() => {
            }, {}, err)
        }
    })
})

function invoke(testSoa, callback) {
    // invoke 时 method 不区分大小写
    testSoa.invoke('hello', {}, function (err, ret) {
        if (err) {
            console.log('Request Error: ' + err);
        } else {
            console.log('Response: success');
        }
        callback(err, ret)
    });
}
