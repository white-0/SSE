interface _object {
    [propName: string]: {}
}

interface soaWebApiKeys {
    serviceCode: number | string,
    serviceTimeout?: number, //可以自定义timeout
    canary?: boolean, //是否请求堡垒
    soaWebApiUrl?: string, //调用本地node soa服务端 调试
    format?: string,
    agent?: any,
    isSkipMetadata?:boolean
}

interface invoke {
    invoke(method: string, params: any, callback: (err: any, result: any) => void, skipValid?: boolean, query?: _object, ...args: any[]): void;
}

export class SoaWebApi {
    constructor(keys: soaWebApiKeys, callback: (err: any, datas: invoke) => void);
}

interface soaKeys {
    url: string,
    serviceTimeout?: number,
    canary?: boolean,
    agent?: any
}

export class Soa {
    constructor(keys: soaKeys, callback: (err: any, datas: invoke) => void);
}

interface _SoaAgent {
    clear: () => _SoaAgent;
    invoke: (method: string, params: any, skipValid?: boolean, query?: _object, ...args: any[]) => Promise<any>;
}

export function SoaAgent(key: number | string): _SoaAgent;
